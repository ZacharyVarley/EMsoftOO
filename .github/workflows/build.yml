name: Multi-Platform Build and Auto-Release

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

env:
  BUILD_DIR: EMsoftOOBuild/Release

jobs:
  build-ubuntu:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies (Ubuntu)
        run: |
          sudo apt-get update
          sudo apt-get install -y git vim wget cmake gcc gfortran ninja-build build-essential libopenblas-dev apt-utils opencl-headers ocl-icd-opencl-dev ocl-icd-libopencl1 libpocl-dev clinfo
      - name: Run Ubuntu build script
        run: |
          chmod +x ./build_ubuntu.sh
          ./build_ubuntu.sh
        shell: bash
      - name: Upload Ubuntu artifact
        uses: actions/upload-artifact@v4
        with:
          name: EMsoftOO-Ubuntu
          path: ${{ github.workspace }}/${{ env.BUILD_DIR }}/EMsoftOO-*.tar.gz

  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies (macOS)
        run: |
          brew install git cmake gcc ninja opencl-icd-loader opencl-headers openblas open-mpi
      - name: Run macOS build script
        run: |
          chmod +x ./build_macos.sh
          ./build_macos.sh
        shell: bash
      - name: Upload macOS artifact
        uses: actions/upload-artifact@v4
        with:
          name: EMsoftOO-MacOS
          path: ${{ github.workspace }}/${{ env.BUILD_DIR }}/EMsoftOO-*.dmg

  create-ubuntu-release:
    needs: [build-ubuntu]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Generate release tag
        id: tag
        run: |
          echo "release_tag=$(date +'%Y.%m.%d-%H%M')-ubuntu" >> $GITHUB_OUTPUT
      - name: Download Ubuntu artifact
        uses: actions/download-artifact@v4
        with:
          name: EMsoftOO-Ubuntu
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag.outputs.release_tag }}
          release_name: Ubuntu Release ${{ steps.tag.outputs.release_tag }}
          draft: false
          prerelease: false
      - name: Upload Ubuntu Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./EMsoftOO-*.tar.gz
          asset_name: EMsoftOO-Ubuntu-${{ steps.tag.outputs.release_tag }}.tar.gz
          asset_content_type: application/gzip

  create-macos-release:
    needs: [build-macos]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Generate release tag
        id: tag
        run: |
          echo "release_tag=$(date +'%Y.%m.%d-%H%M')-macos" >> $GITHUB_OUTPUT
      - name: Download macOS artifact
        uses: actions/download-artifact@v4
        with:
          name: EMsoftOO-MacOS
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag.outputs.release_tag }}
          release_name: macOS Release ${{ steps.tag.outputs.release_tag }}
          draft: false
          prerelease: false
      - name: Upload macOS Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./EMsoftOO-*.dmg
          asset_name: EMsoftOO-macOS-${{ steps.tag.outputs.release_tag }}.dmg
          asset_content_type: application/x-apple-diskimage
